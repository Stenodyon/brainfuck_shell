     1                                  	%define memsize 200
     2                                  	
     3                                  org	0x0000
     4                                  
     5                                  bits 	16
     6                                  
     7                                  main:
     8 00000000 B80010                  	mov ax, 0x1000
     9 00000003 8ED8                    	mov ds, ax
    10 00000005 BE[4800]                	mov si, hello
    11 00000008 E80D00                  	call print
    12                                  
    13 0000000B E87D00                  	call execute
    14                                  	
    15                                  end:
    16 0000000E BE[5C00]                	mov si, stopmsg
    17 00000011 E80400                  	call print
    18                                  end_loop:
    19 00000014 FA                      	cli
    20 00000015 F4                      	hlt
    21 00000016 EBFC                    	jmp end_loop
    22                                  
    23                                  ;; ======================= FUNCTIONS ================================
    24                                  	
    25                                  print:				;prints a string with a newline
    26 00000018 60                      	pusha
    27 00000019 89E5                    	mov bp, sp
    28                                  cont:
    29 0000001B AC                      	lodsb
    30 0000001C 08C0                    	or al, al
    31 0000001E 7409                    	jz dne
    32 00000020 B40E                    	mov ah, 0x0e
    33 00000022 BB0000                  	mov bx, 0
    34 00000025 CD10                    	int 10h
    35 00000027 EBF2                    	jmp cont
    36                                  dne:
    37 00000029 89EC                    	mov sp, bp
    38 0000002B 61                      	popa
    39 0000002C C3                      	ret
    40                                  
    41                                  putc:				;puts a character in al onto the screen
    42 0000002D B40E                    	mov ah, 0x0e
    43 0000002F 53                      	push bx
    44 00000030 BB0000                  	mov bx, 0
    45 00000033 CD10                    	int 10h
    46 00000035 5B                      	pop bx
    47 00000036 C3                      	ret
    48                                  
    49                                  getc:
    50 00000037 60                      	pusha
    51                                  	;; INT 0x16, AH=0x00 : read keypress
    52 00000038 B400                    	mov ah, 0x00
    53 0000003A CD16                    	int 0x16
    54 0000003C 8807                    	mov [bx], byte al
    55 0000003E 61                      	popa
    56 0000003F C3                      	ret
    57                                  
    58                                  abort:
    59 00000040 BE[7100]                	mov si, abrtmsg
    60 00000043 E8D2FF                  	call print
    61 00000046 FA                      	cli
    62 00000047 F4                      	hlt
    63                                  
    64 00000048 457865637574696F6E-     	hello db "Execution started", 10, 13, 0
    64 00000051 20737461727465640A-
    64 0000005A 0D00               
    65 0000005C 457865637574696F6E-     	stopmsg db "Execution stopped.", 10, 13, 0
    65 00000065 2073746F707065642E-
    65 0000006E 0A0D00             
    66 00000071 4552524F5220657865-     	abrtmsg db "ERROR execution aborted", 10, 13, 0
    66 0000007A 637574696F6E206162-
    66 00000083 6F727465640A0D00   
    67                                  
    68                                  execute:
    69 0000008B 60                      	pusha
    70 0000008C BB[2002]                	mov bx, tape
    71                                  	%include "oscode.asm"
     1 0000008F 3EC60700            <1>     mov byte [ds:bx], byte 0
     2 00000093 83C301              <1>     add bx, 1
     3 00000096 3EC60774            <1>     mov byte [ds:bx], byte 116
     4 0000009A 83C301              <1>     add bx, 1
     5 0000009D 3EC60765            <1>     mov byte [ds:bx], byte 101
     6 000000A1 83C301              <1>     add bx, 1
     7 000000A4 3EC60773            <1>     mov byte [ds:bx], byte 115
     8 000000A8 83C301              <1>     add bx, 1
     9 000000AB 3EC60774            <1>     mov byte [ds:bx], byte 116
    10                              <1> loop_start_0:
    11 000000AF 3E8A07              <1>     mov al, byte [ds:bx]
    12 000000B2 08C0                <1>     or al, al
    13 000000B4 0F849200            <1>     jz loop_ended_0
    14                              <1> loop_start_1:
    15 000000B8 3E8A07              <1>     mov al, byte [ds:bx]
    16 000000BB 08C0                <1>     or al, al
    17 000000BD 7432                <1>     jz loop_ended_1
    18 000000BF 3E8007FF            <1>     add byte [ds:bx], byte 255
    19 000000C3 83C302              <1>     add bx, 2
    20 000000C6 3E800701            <1>     add byte [ds:bx], byte 1
    21                              <1> loop_start_2:
    22 000000CA 3E8A07              <1>     mov al, byte [ds:bx]
    23 000000CD 08C0                <1>     or al, al
    24 000000CF 7405                <1>     jz loop_ended_2
    25 000000D1 83C301              <1>     add bx, 1
    26 000000D4 EBF4                <1>     jmp loop_start_2
    27                              <1> loop_ended_2:
    28 000000D6 83C301              <1>     add bx, 1
    29 000000D9 3E800701            <1>     add byte [ds:bx], byte 1
    30 000000DD 83C3FE              <1>     add bx, -2
    31                              <1> loop_start_3:
    32 000000E0 3E8A07              <1>     mov al, byte [ds:bx]
    33 000000E3 08C0                <1>     or al, al
    34 000000E5 7405                <1>     jz loop_ended_3
    35 000000E7 83C3FF              <1>     add bx, -1
    36 000000EA EBF4                <1>     jmp loop_start_3
    37                              <1> loop_ended_3:
    38 000000EC 83C3FF              <1>     add bx, -1
    39 000000EF EBC7                <1>     jmp loop_start_1
    40                              <1> loop_ended_1:
    41 000000F1 83C302              <1>     add bx, 2
    42                              <1> loop_start_4:
    43 000000F4 3E8A07              <1>     mov al, byte [ds:bx]
    44 000000F7 08C0                <1>     or al, al
    45 000000F9 7405                <1>     jz loop_ended_4
    46 000000FB 83C301              <1>     add bx, 1
    47 000000FE EBF4                <1>     jmp loop_start_4
    48                              <1> loop_ended_4:
    49 00000100 83C301              <1>     add bx, 1
    50                              <1> loop_start_5:
    51 00000103 3E8A07              <1>     mov al, byte [ds:bx]
    52 00000106 08C0                <1>     or al, al
    53 00000108 7405                <1>     jz loop_ended_5
    54 0000010A 83C301              <1>     add bx, 1
    55 0000010D EBF4                <1>     jmp loop_start_5
    56                              <1> loop_ended_5:
    57 0000010F 83C3FF              <1>     add bx, -1
    58                              <1> loop_start_6:
    59 00000112 3E8A07              <1>     mov al, byte [ds:bx]
    60 00000115 08C0                <1>     or al, al
    61 00000117 741C                <1>     jz loop_ended_6
    62                              <1> loop_start_7:
    63 00000119 3E8A07              <1>     mov al, byte [ds:bx]
    64 0000011C 08C0                <1>     or al, al
    65 0000011E 7410                <1>     jz loop_ended_7
    66 00000120 3E8007FF            <1>     add byte [ds:bx], byte 255
    67 00000124 83C301              <1>     add bx, 1
    68 00000127 3E800701            <1>     add byte [ds:bx], byte 1
    69 0000012B 83C3FF              <1>     add bx, -1
    70 0000012E EBE9                <1>     jmp loop_start_7
    71                              <1> loop_ended_7:
    72 00000130 83C3FF              <1>     add bx, -1
    73 00000133 EBDD                <1>     jmp loop_start_6
    74                              <1> loop_ended_6:
    75 00000135 83C3FF              <1>     add bx, -1
    76                              <1> loop_start_8:
    77 00000138 3E8A07              <1>     mov al, byte [ds:bx]
    78 0000013B 08C0                <1>     or al, al
    79 0000013D 7405                <1>     jz loop_ended_8
    80 0000013F 83C3FF              <1>     add bx, -1
    81 00000142 EBF4                <1>     jmp loop_start_8
    82                              <1> loop_ended_8:
    83 00000144 83C3FE              <1>     add bx, -2
    84 00000147 E965FF              <1>     jmp loop_start_0
    85                              <1> loop_ended_0:
    86 0000014A 83C303              <1>     add bx, 3
    87                              <1> loop_start_9:
    88 0000014D 3E8A07              <1>     mov al, byte [ds:bx]
    89 00000150 08C0                <1>     or al, al
    90 00000152 741C                <1>     jz loop_ended_9
    91                              <1> loop_start_10:
    92 00000154 3E8A07              <1>     mov al, byte [ds:bx]
    93 00000157 08C0                <1>     or al, al
    94 00000159 7410                <1>     jz loop_ended_10
    95 0000015B 3E8007FF            <1>     add byte [ds:bx], byte 255
    96 0000015F 83C3FE              <1>     add bx, -2
    97 00000162 3E800701            <1>     add byte [ds:bx], byte 1
    98 00000166 83C302              <1>     add bx, 2
    99 00000169 EBE9                <1>     jmp loop_start_10
   100                              <1> loop_ended_10:
   101 0000016B 83C301              <1>     add bx, 1
   102 0000016E EBDD                <1>     jmp loop_start_9
   103                              <1> loop_ended_9:
   104 00000170 83C302              <1>     add bx, 2
   105                              <1> loop_start_11:
   106 00000173 3E8A07              <1>     mov al, byte [ds:bx]
   107 00000176 08C0                <1>     or al, al
   108 00000178 741C                <1>     jz loop_ended_11
   109                              <1> loop_start_12:
   110 0000017A 3E8A07              <1>     mov al, byte [ds:bx]
   111 0000017D 08C0                <1>     or al, al
   112 0000017F 7410                <1>     jz loop_ended_12
   113 00000181 3E8007FF            <1>     add byte [ds:bx], byte 255
   114 00000185 83C3FD              <1>     add bx, -3
   115 00000188 3E800701            <1>     add byte [ds:bx], byte 1
   116 0000018C 83C303              <1>     add bx, 3
   117 0000018F EBE9                <1>     jmp loop_start_12
   118                              <1> loop_ended_12:
   119 00000191 83C301              <1>     add bx, 1
   120 00000194 EBDD                <1>     jmp loop_start_11
   121                              <1> loop_ended_11:
   122 00000196 83C3FC              <1>     add bx, -4
   123                              <1> loop_start_13:
   124 00000199 3E8A07              <1>     mov al, byte [ds:bx]
   125 0000019C 08C0                <1>     or al, al
   126 0000019E 7405                <1>     jz loop_ended_13
   127 000001A0 83C3FF              <1>     add bx, -1
   128 000001A3 EBF4                <1>     jmp loop_start_13
   129                              <1> loop_ended_13:
   130 000001A5 3E800701            <1>     add byte [ds:bx], byte 1
   131 000001A9 83C301              <1>     add bx, 1
   132                              <1> loop_start_14:
   133 000001AC 3E8A07              <1>     mov al, byte [ds:bx]
   134 000001AF 08C0                <1>     or al, al
   135 000001B1 740F                <1>     jz loop_ended_14
   136 000001B3 3E8A07              <1>     mov al, byte [ds:bx]
   137 000001B6 E874FE              <1>     call putc
   138 000001B9 3EC60700            <1>     mov byte [ds:bx], byte 0
   139 000001BD 83C301              <1>     add bx, 1
   140 000001C0 EBEA                <1>     jmp loop_start_14
   141                              <1> loop_ended_14:
   142 000001C2 3E8007FF            <1>     add byte [ds:bx], byte 255
   143                              <1> loop_start_15:
   144 000001C6 3E8A07              <1>     mov al, byte [ds:bx]
   145 000001C9 08C0                <1>     or al, al
   146 000001CB 740D                <1>     jz loop_ended_15
   147 000001CD 3E800701            <1>     add byte [ds:bx], byte 1
   148 000001D1 83C3FF              <1>     add bx, -1
   149 000001D4 3E8007FF            <1>     add byte [ds:bx], byte 255
   150 000001D8 EBEC                <1>     jmp loop_start_15
   151                              <1> loop_ended_15:
   152 000001DA 83C3FF              <1>     add bx, -1
   153                              <1> loop_start_16:
   154 000001DD 3E8A07              <1>     mov al, byte [ds:bx]
   155 000001E0 08C0                <1>     or al, al
   156 000001E2 7405                <1>     jz loop_ended_16
   157 000001E4 83C3FF              <1>     add bx, -1
   158 000001E7 EBF4                <1>     jmp loop_start_16
   159                              <1> loop_ended_16:
   160 000001E9 3E800701            <1>     add byte [ds:bx], byte 1
   161 000001ED 83C301              <1>     add bx, 1
   162                              <1> loop_start_17:
   163 000001F0 3E8A07              <1>     mov al, byte [ds:bx]
   164 000001F3 08C0                <1>     or al, al
   165 000001F5 740F                <1>     jz loop_ended_17
   166 000001F7 3E8A07              <1>     mov al, byte [ds:bx]
   167 000001FA E830FE              <1>     call putc
   168 000001FD 3EC60700            <1>     mov byte [ds:bx], byte 0
   169 00000201 83C301              <1>     add bx, 1
   170 00000204 EBEA                <1>     jmp loop_start_17
   171                              <1> loop_ended_17:
   172 00000206 3E8007FF            <1>     add byte [ds:bx], byte 255
   173                              <1> loop_start_18:
   174 0000020A 3E8A07              <1>     mov al, byte [ds:bx]
   175 0000020D 08C0                <1>     or al, al
   176 0000020F 740D                <1>     jz loop_ended_18
   177 00000211 3E800701            <1>     add byte [ds:bx], byte 1
   178 00000215 83C3FF              <1>     add bx, -1
   179 00000218 3E8007FF            <1>     add byte [ds:bx], byte 255
   180 0000021C EBEC                <1>     jmp loop_start_18
   181                              <1> loop_ended_18:
    72 0000021E 61                      	popa
    73 0000021F C3                      	ret
    74                                  tape:	
