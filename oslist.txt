     1                                  	%define memsize 200
     2                                  	
     3                                  	[bits 16]
     4                                  	[org 0]
     5                                  
     6                                  
     7                                  main:
     8 00000000 1F                      	pop ds 			; getting ds from the bootloader
     9                                  	;; mov si, hello
    10                                  	;; call print
    11                                  
    12                                  	;; mov bx, numbers
    13                                  	;; mov al, [ds:bx]
    14                                  	;; call putc
    15                                  	;; mov al, 10
    16                                  	;; call putc
    17                                  	;; mov al, 13
    18                                  	;; call putc
    19                                  
    20 00000001 E82D00                  	call execute
    21                                  
    22                                  end:
    23 00000004 BE[0D01]                	mov si, stopmsg
    24 00000007 E80200                  	call print
    25                                  end_loop:	
    26 0000000A EBFE                    	jmp end_loop
    27                                  
    28                                  ;; ======================= FUNCTIONS ================================
    29                                  	
    30                                  print:				;prints a string with a newline
    31 0000000C 60                      	pusha
    32 0000000D 89E5                    	mov bp, sp
    33                                  cont:
    34 0000000F AC                      	lodsb
    35 00000010 08C0                    	or al, al
    36 00000012 7409                    	jz dne
    37 00000014 B40E                    	mov ah, 0x0e
    38 00000016 BB0000                  	mov bx, 0
    39 00000019 CD10                    	int 10h
    40 0000001B EBF2                    	jmp cont
    41                                  dne:
    42 0000001D 89EC                    	mov sp, bp
    43 0000001F 61                      	popa
    44 00000020 C3                      	ret
    45                                  
    46                                  putc:				;puts a character in al onto the screen
    47 00000021 B40E                    	mov ah, 0x0e
    48 00000023 BB0000                  	mov bx, 0
    49 00000026 CD10                    	int 10h
    50 00000028 C3                      	ret
    51                                  
    52                                  abort:
    53 00000029 BE[2201]                	mov si, abrtmsg
    54 0000002C E8DDFF                  	call print
    55 0000002F FA                      	cli
    56 00000030 F4                      	hlt
    57                                  
    58                                  execute:			;runs the brainfuck program
    59 00000031 BE[2102]                	mov si, program
    60 00000034 B9[4801]                	mov cx, code
    61 00000037 31C0                    	xor ax, ax
    62                                  main_loop:
    63 00000039 30E4                    	xor ah, ah
    64 0000003B AC                      	lodsb
    65 0000003C 08C0                    	or al, al
    66 0000003E 74C4                    	jz end
    67 00000040 89CB                    	mov bx, cx
    68 00000042 01C3                    	add bx, ax
    69 00000044 2E8B07                  	mov ax, [cs:bx]
    70 00000047 FFE0                    	jmp ax
    71                                  
    72                                  _plus:
    73 00000049 8B1E[4601]              	mov bx, [memptr]
    74 0000004D 800701                  	add byte [bx], 1
    75 00000050 EBE7                    	jmp main_loop
    76                                  
    77                                  _minus:
    78 00000052 8B1E[4601]              	mov bx, [memptr]
    79 00000056 802F01                  	sub byte [bx], 1
    80 00000059 EBDE                    	jmp main_loop
    81                                  
    82                                  _left:
    83 0000005B 66832E[4601]01          	sub dword [memptr], 1
    84 00000061 66813E[4601]-           	cmp dword [memptr], tape
    84 00000066 [58010000]         
    85 0000006A 7D09                    	jge _left_no_loopback
    86 0000006C 668106[4601]C80000-     	add dword [memptr], memsize
    86 00000074 00                 
    87                                  _left_no_loopback:	
    88 00000075 EBC2                    	jmp main_loop
    89                                  
    90                                  _right:
    91 00000077 668306[4601]01          	add dword [memptr], 1
    92 0000007D B8[5801]                	mov ax, tape
    93 00000080 05C800                  	add ax, memsize
    94 00000083 3906[4601]              	cmp [memptr], ax
    95 00000087 7C09                    	jl _right_no_loopback
    96 00000089 66C706[4601]-           	mov dword [memptr], tape
    96 0000008E [58010000]         
    97                                  _right_no_loopback:	
    98 00000092 EBA5                    	jmp main_loop
    99                                  
   100                                  _obracket:
   101 00000094 8B1E[4601]              	mov bx, [memptr]
   102 00000098 8B1F                    	mov bx, [bx]
   103 0000009A 09DB                    	or bx, bx
   104 0000009C 7520                    	jnz _obracket_skip
   105 0000009E 31C0                    	xor ax, ax
   106 000000A0 EB05                    	jmp _obracket_loopstart
   107                                  _obracket_loop:
   108 000000A2 83F800                  	cmp ax, 0
   109 000000A5 7492                    	je main_loop
   110                                  _obracket_loopstart:
   111 000000A7 46                      	inc si
   112 000000A8 81FE[6E02]              	cmp si, progend
   113 000000AC 0F8479FF                	je abort
   114 000000B0 803C0A                  	cmp byte [si], 0xa
   115 000000B3 7501                    	jne _obracket_test
   116 000000B5 40                      	inc ax
   117                                  _obracket_test:	
   118 000000B6 803C0C                  	cmp byte [si], 0xc
   119 000000B9 7501                    	jne _obracket_loopend
   120 000000BB 48                      	dec ax
   121                                  _obracket_loopend:
   122 000000BC EBE4                    	jmp _obracket_loop
   123                                  _obracket_skip:	
   124 000000BE E978FF                  	jmp main_loop
   125                                  
   126                                  _cbracket:
   127 000000C1 8B1E[4601]              	mov bx, [memptr]
   128 000000C5 8B1F                    	mov bx, [bx]
   129 000000C7 09DB                    	or bx, bx
   130 000000C9 7421                    	jz _cbracket_skip
   131 000000CB 31C0                    	xor ax, ax
   132 000000CD EB05                    	jmp _cbracket_loopstart
   133                                  _cbracket_loop:
   134 000000CF 83F800                  	cmp ax, 0
   135 000000D2 7417                    	je _cbracket_end
   136                                  _cbracket_loopstart:
   137 000000D4 4E                      	dec si
   138 000000D5 81FE[2002]              	cmp si, progstart
   139 000000D9 0F844CFF                	je abort
   140 000000DD 803C0A                  	cmp byte [si], 0xa
   141 000000E0 7501                    	jne _cbracket_test
   142 000000E2 48                      	dec ax
   143                                  _cbracket_test:	
   144 000000E3 803C0C                  	cmp byte [si], 0xc
   145 000000E6 7501                    	jne _cbracket_loopend
   146 000000E8 40                      	inc ax
   147                                  _cbracket_loopend:
   148 000000E9 EBE4                    	jmp _cbracket_loop
   149                                  _cbracket_end:
   150 000000EB 46                      	inc si
   151                                  _cbracket_skip:	
   152 000000EC E94AFF                  	jmp main_loop
   153                                  
   154                                  _out:
   155 000000EF 8B1E[4601]              	mov bx, [memptr]
   156 000000F3 8A07                    	mov al, [bx]
   157 000000F5 E829FF                  	call putc
   158 000000F8 31C0                    	xor ax, ax
   159 000000FA E93CFF                  	jmp main_loop
   160                                  	
   161 000000FD 48656C6C6F2C20776F-     	hello db "Hello, world!", 10, 13, 0
   161 00000106 726C64210A0D00     
   162 0000010D 457865637574696F6E-     	stopmsg db "Execution stopped.", 10, 13, 0
   162 00000116 2073746F707065642E-
   162 0000011F 0A0D00             
   163 00000122 4552524F5220657865-     	abrtmsg db "ERROR execution aborted", 10, 13, 0
   163 0000012B 637574696F6E206162-
   163 00000134 6F727465640A0D00   
   164 0000013C 303132333435363738-     	numbers db "0123456789"
   164 00000145 39                 
   165 00000146 [5801]                  	memptr dw tape
   166                                  
   167                                  code:
   168 00000148 0000                    	dw 0
   169 0000014A [4900]                  	dw _plus
   170 0000014C [5200]                  	dw _minus
   171 0000014E [5B00]                  	dw _left
   172 00000150 [7700]                  	dw _right
   173 00000152 [9400]                  	dw _obracket
   174 00000154 [C100]                  	dw _cbracket
   175 00000156 [EF00]                  	dw _out
   176                                  	
   177 00000158 <res 000000C8>          tape:	resb memsize
   177          ******************       warning: uninitialized space declared in .text section: zeroing
   178                                  
   179                                  progstart:
   180 00000220 00                      	db 0
   181                                  program:
   182 00000221 <incbin>                	INCBIN "bf.bin"
   183                                  progend:	
   184 0000026E 00                      	db 0
