     1                                  	%define memsize 200
     2                                  	
     3                                  org	0x0000
     4                                  
     5                                  bits 	16
     6                                  
     7                                  main:
     8 00000000 B80010                  	mov ax, 0x1000
     9 00000003 8ED8                    	mov ds, ax
    10 00000005 BE[3D00]                	mov si, hello
    11 00000008 E80D00                  	call print
    12                                  
    13 0000000B E86E00                  	call execute
    14                                  	
    15                                  end:
    16 0000000E BE[4D00]                	mov si, stopmsg
    17 00000011 E80400                  	call print
    18                                  end_loop:
    19 00000014 FA                      	cli
    20 00000015 F4                      	hlt
    21 00000016 EBFC                    	jmp end_loop
    22                                  
    23                                  ;; ======================= FUNCTIONS ================================
    24                                  	
    25                                  print:				;prints a string with a newline
    26 00000018 60                      	pusha
    27 00000019 89E5                    	mov bp, sp
    28                                  cont:
    29 0000001B AC                      	lodsb
    30 0000001C 08C0                    	or al, al
    31 0000001E 7409                    	jz dne
    32 00000020 B40E                    	mov ah, 0x0e
    33 00000022 BB0000                  	mov bx, 0
    34 00000025 CD10                    	int 10h
    35 00000027 EBF2                    	jmp cont
    36                                  dne:
    37 00000029 89EC                    	mov sp, bp
    38 0000002B 61                      	popa
    39 0000002C C3                      	ret
    40                                  
    41                                  putc:				;puts a character in al onto the screen
    42 0000002D B40E                    	mov ah, 0x0e
    43 0000002F BB0000                  	mov bx, 0
    44 00000032 CD10                    	int 10h
    45 00000034 C3                      	ret
    46                                  
    47                                  abort:
    48 00000035 BE[6200]                	mov si, abrtmsg
    49 00000038 E8DDFF                  	call print
    50 0000003B FA                      	cli
    51 0000003C F4                      	hlt
    52                                  
    53 0000003D 48656C6C6F2C20776F-     	hello db "Hello, world!", 10, 13, 0
    53 00000046 726C64210A0D00     
    54 0000004D 457865637574696F6E-     	stopmsg db "Execution stopped.", 10, 13, 0
    54 00000056 2073746F707065642E-
    54 0000005F 0A0D00             
    55 00000062 4552524F5220657865-     	abrtmsg db "ERROR execution aborted", 10, 13, 0
    55 0000006B 637574696F6E206162-
    55 00000074 6F727465640A0D00   
    56                                  
    57                                  execute:
    58 0000007C 60                      	pusha
    59 0000007D BB[CD00]                	mov bx, tape
    60                                  	%include "bfcompiler/os.asm"
     1 00000080 3EC60700            <1>     mov byte [ds:bx], byte 0
     2 00000084 3E800730            <1>     add byte [ds:bx], byte 48
     3 00000088 83C301              <1>     add bx, 1
     4 0000008B 3EC60700            <1>     mov byte [ds:bx], byte 0
     5 0000008F 3E80070A            <1>     add byte [ds:bx], byte 10
     6                              <1> loop_start_0_0:
     7 00000093 3E8A07              <1>     mov al, byte [ds:bx]
     8 00000096 08C0                <1>     or al, al
     9 00000098 7416                <1>     jz loop_ended_0_0
    10 0000009A 83C3FF              <1>     add bx, -1
    11 0000009D 3E8A07              <1>     mov al, byte [ds:bx]
    12 000000A0 E88AFF              <1>     call putc
    13 000000A3 3E800701            <1>     add byte [ds:bx], byte 1
    14 000000A7 83C301              <1>     add bx, 1
    15 000000AA 3E8007FF            <1>     add byte [ds:bx], byte 255
    16 000000AE EBE3                <1>     jmp loop_start_0_0
    17                              <1> loop_ended_0_0:
    18 000000B0 83C301              <1>     add bx, 1
    19 000000B3 3EC60700            <1>     mov byte [ds:bx], byte 0
    20 000000B7 3E80070A            <1>     add byte [ds:bx], byte 10
    21 000000BB 3E8A07              <1>     mov al, byte [ds:bx]
    22 000000BE E86CFF              <1>     call putc
    23 000000C1 3E800703            <1>     add byte [ds:bx], byte 3
    24 000000C5 3E8A07              <1>     mov al, byte [ds:bx]
    25 000000C8 E862FF              <1>     call putc
    61 000000CB 61                      	popa
    62 000000CC C3                      	ret
    63                                  tape:	
